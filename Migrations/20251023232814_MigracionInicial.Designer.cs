// <auto-generated />
using System;
using InmobiliariaApi;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InmobiliariaApi.Migrations
{
    [DbContext(typeof(InmobiliariaDbContext))]
    [Migration("20251023232814_MigracionInicial")]
    partial class MigracionInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("InmobiliariaApi.Features.Alquiler.Alquiler", b =>
                {
                    b.Property<int>("IdAlquiler")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_alquiler");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdAlquiler"));

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_fin");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_inicio");

                    b.Property<int>("IdInmueble")
                        .HasColumnType("int")
                        .HasColumnName("id_inmueble");

                    b.Property<int>("IdInquilino")
                        .HasColumnType("int")
                        .HasColumnName("id_inquilino");

                    b.Property<double>("Precio")
                        .HasColumnType("double")
                        .HasColumnName("precio");

                    b.HasKey("IdAlquiler");

                    b.HasIndex("IdInmueble")
                        .HasDatabaseName("IX_Alquiler_Inmueble");

                    b.HasIndex("IdInquilino");

                    b.ToTable("alquileres");

                    b.HasData(
                        new
                        {
                            IdAlquiler = 1,
                            FechaFin = new DateTime(2025, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicio = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdInmueble = 1,
                            IdInquilino = 1,
                            Precio = 75000.0
                        },
                        new
                        {
                            IdAlquiler = 2,
                            FechaFin = new DateTime(2025, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicio = new DateTime(2024, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdInmueble = 3,
                            IdInquilino = 2,
                            Precio = 120000.0
                        });
                });

            modelBuilder.Entity("InmobiliariaApi.Features.Inmueble.Inmueble", b =>
                {
                    b.Property<int>("IdInmueble")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_inmueble");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdInmueble"));

                    b.Property<int>("Ambientes")
                        .HasColumnType("int")
                        .HasColumnName("ambientes");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("direccion");

                    b.Property<bool>("Disponible")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("disponible");

                    b.Property<int>("IdPropietario")
                        .HasColumnType("int")
                        .HasColumnName("id_propietario");

                    b.Property<string>("Imagen")
                        .HasColumnType("longtext")
                        .HasColumnName("imagen");

                    b.Property<double>("Precio")
                        .HasColumnType("double")
                        .HasColumnName("precio");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("tipo");

                    b.Property<string>("Uso")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("uso");

                    b.HasKey("IdInmueble");

                    b.HasIndex("IdPropietario")
                        .HasDatabaseName("IX_Inmueble_Propietario");

                    b.ToTable("inmuebles");

                    b.HasData(
                        new
                        {
                            IdInmueble = 1,
                            Ambientes = 3,
                            Direccion = "Av. Corrientes 1234, CABA",
                            Disponible = true,
                            IdPropietario = 1,
                            Imagen = "",
                            Precio = 150000.0,
                            Tipo = "Departamento",
                            Uso = "Residencial"
                        },
                        new
                        {
                            IdInmueble = 2,
                            Ambientes = 4,
                            Direccion = "San Martín 567, Belgrano",
                            Disponible = true,
                            IdPropietario = 1,
                            Imagen = "",
                            Precio = 280000.0,
                            Tipo = "Casa",
                            Uso = "Residencial"
                        },
                        new
                        {
                            IdInmueble = 3,
                            Ambientes = 2,
                            Direccion = "Florida 890, Microcentro",
                            Disponible = false,
                            IdPropietario = 2,
                            Imagen = "",
                            Precio = 95000.0,
                            Tipo = "Local",
                            Uso = "Comercial"
                        },
                        new
                        {
                            IdInmueble = 4,
                            Ambientes = 5,
                            Direccion = "Libertador 2345, Palermo",
                            Disponible = true,
                            IdPropietario = 3,
                            Imagen = "",
                            Precio = 450000.0,
                            Tipo = "Casa",
                            Uso = "Residencial"
                        },
                        new
                        {
                            IdInmueble = 5,
                            Ambientes = 2,
                            Direccion = "Rivadavia 3456, Caballito",
                            Disponible = true,
                            IdPropietario = 2,
                            Imagen = "",
                            Precio = 120000.0,
                            Tipo = "Departamento",
                            Uso = "Residencial"
                        });
                });

            modelBuilder.Entity("InmobiliariaApi.Features.Inquilino.Inquilino", b =>
                {
                    b.Property<int>("IdInquilino")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_inquilino");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdInquilino"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("apellido");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("direccion");

                    b.Property<int>("Dni")
                        .HasColumnType("int")
                        .HasColumnName("dni");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nombre");

                    b.Property<int>("Telefono")
                        .HasColumnType("int")
                        .HasColumnName("telefono");

                    b.HasKey("IdInquilino");

                    b.ToTable("inquilinos");

                    b.HasData(
                        new
                        {
                            IdInquilino = 1,
                            Apellido = "Pérez",
                            Direccion = "Belgrano 456, CABA",
                            Dni = 11111111,
                            Nombre = "Ana María",
                            Telefono = 1598765432
                        },
                        new
                        {
                            IdInquilino = 2,
                            Apellido = "García",
                            Direccion = "Santa Fe 789, Palermo",
                            Dni = 22222222,
                            Nombre = "Luis Fernando",
                            Telefono = 1587654321
                        },
                        new
                        {
                            IdInquilino = 3,
                            Apellido = "Silva",
                            Direccion = "Rivadavia 1234, Caballito",
                            Dni = 33333333,
                            Nombre = "Carmen Elena",
                            Telefono = 1576543210
                        });
                });

            modelBuilder.Entity("InmobiliariaApi.Features.Pago.Pago", b =>
                {
                    b.Property<int>("IdPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_pago");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdPago"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha");

                    b.Property<int>("IdAlquiler")
                        .HasColumnType("int")
                        .HasColumnName("id_alquiler");

                    b.Property<double>("Importe")
                        .HasColumnType("double")
                        .HasColumnName("importe");

                    b.Property<int>("NroPago")
                        .HasColumnType("int")
                        .HasColumnName("nro_pago");

                    b.HasKey("IdPago");

                    b.HasIndex("IdAlquiler")
                        .HasDatabaseName("IX_Pago_Alquiler");

                    b.ToTable("pagos");

                    b.HasData(
                        new
                        {
                            IdPago = 1,
                            Fecha = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAlquiler = 1,
                            Importe = 75000.0,
                            NroPago = 1
                        },
                        new
                        {
                            IdPago = 2,
                            Fecha = new DateTime(2024, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAlquiler = 1,
                            Importe = 75000.0,
                            NroPago = 2
                        },
                        new
                        {
                            IdPago = 3,
                            Fecha = new DateTime(2024, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAlquiler = 1,
                            Importe = 75000.0,
                            NroPago = 3
                        },
                        new
                        {
                            IdPago = 4,
                            Fecha = new DateTime(2024, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAlquiler = 1,
                            Importe = 75000.0,
                            NroPago = 4
                        },
                        new
                        {
                            IdPago = 5,
                            Fecha = new DateTime(2024, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAlquiler = 1,
                            Importe = 75000.0,
                            NroPago = 5
                        },
                        new
                        {
                            IdPago = 6,
                            Fecha = new DateTime(2024, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAlquiler = 2,
                            Importe = 120000.0,
                            NroPago = 1
                        },
                        new
                        {
                            IdPago = 7,
                            Fecha = new DateTime(2024, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAlquiler = 2,
                            Importe = 120000.0,
                            NroPago = 2
                        },
                        new
                        {
                            IdPago = 8,
                            Fecha = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAlquiler = 2,
                            Importe = 120000.0,
                            NroPago = 3
                        },
                        new
                        {
                            IdPago = 9,
                            Fecha = new DateTime(2025, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAlquiler = 2,
                            Importe = 120000.0,
                            NroPago = 4
                        });
                });

            modelBuilder.Entity("InmobiliariaApi.Features.Propietario.Propietario", b =>
                {
                    b.Property<int>("IdPropietario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_propietario");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdPropietario"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("apellido");

                    b.Property<int>("Dni")
                        .HasColumnType("int")
                        .HasColumnName("dni");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("mail");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nombre");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("password");

                    b.Property<int>("Telefono")
                        .HasColumnType("int")
                        .HasColumnName("telefono");

                    b.HasKey("IdPropietario");

                    b.HasIndex("Mail")
                        .IsUnique()
                        .HasDatabaseName("IX_Propietario_Mail");

                    b.ToTable("propietarios");

                    b.HasData(
                        new
                        {
                            IdPropietario = 1,
                            Apellido = "González",
                            Dni = 12345678,
                            Mail = "juan.gonzalez@email.com",
                            Nombre = "Juan Carlos",
                            Password = "AQAAAAIAAYagAAAAEAI7vDzjljLddAK4n9tI3jkvoi2qTG6x8M6xnZ4JMDi/tn/WLtyd/EVn2qJ6M8pzVA==",
                            Telefono = 1234567890
                        },
                        new
                        {
                            IdPropietario = 2,
                            Apellido = "Martínez",
                            Dni = 23456789,
                            Mail = "maria.martinez@email.com",
                            Nombre = "María Elena",
                            Password = "AQAAAAIAAYagAAAAEAI7vDzjljLddAK4n9tI3jkvoi2qTG6x8M6xnZ4JMDi/tn/WLtyd/EVn2qJ6M8pzVA==",
                            Telefono = 1234567890
                        },
                        new
                        {
                            IdPropietario = 3,
                            Apellido = "López",
                            Dni = 34567890,
                            Mail = "carlos.lopez@email.com",
                            Nombre = "Carlos Alberto",
                            Password = "AQAAAAIAAYagAAAAEAI7vDzjljLddAK4n9tI3jkvoi2qTG6x8M6xnZ4JMDi/tn/WLtyd/EVn2qJ6M8pzVA==",
                            Telefono = 1234567890
                        });
                });

            modelBuilder.Entity("InmobiliariaApi.Features.Alquiler.Alquiler", b =>
                {
                    b.HasOne("InmobiliariaApi.Features.Inmueble.Inmueble", "Inmueble")
                        .WithMany("Alquileres")
                        .HasForeignKey("IdInmueble")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InmobiliariaApi.Features.Inquilino.Inquilino", "Inquilino")
                        .WithMany("Alquileres")
                        .HasForeignKey("IdInquilino")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Inmueble");

                    b.Navigation("Inquilino");
                });

            modelBuilder.Entity("InmobiliariaApi.Features.Inmueble.Inmueble", b =>
                {
                    b.HasOne("InmobiliariaApi.Features.Propietario.Propietario", "Propietario")
                        .WithMany()
                        .HasForeignKey("IdPropietario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Propietario");
                });

            modelBuilder.Entity("InmobiliariaApi.Features.Pago.Pago", b =>
                {
                    b.HasOne("InmobiliariaApi.Features.Alquiler.Alquiler", "Alquiler")
                        .WithMany("Pagos")
                        .HasForeignKey("IdAlquiler")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Alquiler");
                });

            modelBuilder.Entity("InmobiliariaApi.Features.Alquiler.Alquiler", b =>
                {
                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("InmobiliariaApi.Features.Inmueble.Inmueble", b =>
                {
                    b.Navigation("Alquileres");
                });

            modelBuilder.Entity("InmobiliariaApi.Features.Inquilino.Inquilino", b =>
                {
                    b.Navigation("Alquileres");
                });
#pragma warning restore 612, 618
        }
    }
}
